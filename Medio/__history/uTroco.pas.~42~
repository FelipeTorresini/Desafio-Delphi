unit uTroco;

interface

type

  TCedula = (ceNota100, ceNota50, ceNota20, ceNota10, ceNota5, ceNota2, ceMoeda100, ceMoeda50, ceMoeda25, ceMoeda10, ceMoeda5, ceMoeda1);

  TTroco = class
  private
    FTipo: TCedula;
    FQuantidade: Integer;
  public
    constructor Create(aTipo: TCedula; aQuantidade: Integer);
    class function CalcularTroco(var ATotal: Double; var AQuantidade: Integer): TCedula;

    property Tipo: TCedula read FTipo;
    property Quantidade: Integer read FQuantidade write FQuantidade;
  end;

const
  CValorCedula: array [TCedula] of Double = (100, 50, 20, 10, 5, 2, 1, 0.5, 0.25, 0.1, 0.05, 0.01);

implementation

constructor TTroco.Create(aTipo: TCedula; aQuantidade: Integer);
begin
  inherited Create;

  FTipo := aTipo;
  FQuantidade := aQuantidade;
end;

class function TTroco.CalcularTroco(var ATotal: Double; var AQuantidade: Integer): TCedula;
var
  tipo: TCedula;
  resto: Double;
begin
  // apenas para inicializar a variavel e nao mostrar warning no build
  tipo := ceMoeda1;

  // Atotal só deve entrar quando a function for chamada novamente
  // senao, caira nos if mais de uma vez
  resto := ATotal;

  if resto >= 100 then
  begin
    AQuantidade := Trunc(ATotal / 100);
    ATotal := ATotal - (AQuantidade * 100);
    tipo := ceNota100;
  end;

  if (resto < 100) and (resto >= 50)then
  begin
    AQuantidade := Trunc(ATotal / 50);
    ATotal := ATotal - (AQuantidade * 50);
    tipo := ceNota50;
  end;

  if (resto < 50) and (resto >= 20) then
  begin
    AQuantidade := Trunc(ATotal / 20);
    ATotal := ATotal - (AQuantidade * 20);
    tipo := ceNota20;
  end;

  if (resto < 20) and (resto >= 10) then
  begin
    AQuantidade := Trunc(ATotal / 10);
    ATotal := ATotal - (AQuantidade * 10);
    tipo := ceNota10;
  end;

  if (resto < 10) and (resto >= 5) then
  begin
    AQuantidade := Trunc(ATotal / 5);
    ATotal := ATotal - (AQuantidade * 5);
    tipo := ceNota5;
  end;

  if (resto < 5) and (resto >= 2) then
  begin
    AQuantidade := Trunc(ATotal / 2);
    ATotal := ATotal - (AQuantidade * 2);
    tipo := ceNota2;
  end;

  if (resto < 2) and (resto >= 1) then
  begin
    AQuantidade := Trunc(ATotal / 1);
    ATotal := ATotal - (AQuantidade * 1);
    tipo := ceMoeda100;
  end;

  if (resto < 1) and (resto >= 0.50) then
  begin
    AQuantidade := Trunc(ATotal / 0.50);
    ATotal := ATotal - (AQuantidade * 0.50);
    tipo := ceMoeda50;
  end;

  Result := tipo;
end;

end.

